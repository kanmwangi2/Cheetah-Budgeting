rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Organization-level security
    match /organizations/{orgId} {
      // App admins can read/write all organizations
      allow read, write: if request.auth != null && 
        (isAppAdmin() || request.auth.uid in resource.data.memberIds);
      
      // Organization-specific collections
      match /budgets/{budgetId} {
        allow read: if request.auth != null && 
          (isAppAdmin() || canAccessOrganization(orgId));
        allow write: if request.auth != null && 
          (isAppAdmin() || isOrgAdmin(orgId) || canEditBudget(budgetId));
      }
      
      match /departments/{deptId} {
        allow read: if request.auth != null && 
          (isAppAdmin() || canAccessOrganization(orgId));
        allow write: if request.auth != null && 
          (isAppAdmin() || isOrgAdmin(orgId));
      }
      
      match /users/{userId} {
        allow read: if request.auth != null && 
          (isAppAdmin() || isOrgAdmin(orgId));
        allow write: if request.auth != null && 
          (isAppAdmin() || isOrgAdmin(orgId));
      }
    }
    
    // User profile access
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || isAppAdmin());
    }
    
    // Helper functions
    function isAppAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'app_admin';
    }
    
    function isOrgAdmin(orgId) {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'org_admin' &&
        request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.adminIds;
    }
    
    function canAccessOrganization(orgId) {
      return request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.memberIds;
    }
  }
}